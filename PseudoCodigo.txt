class MarcadorDeReuniao {
    disponibilidades

    marcarReuniaoEntre(dataInicial,dataFinal,listaDeParticipantes){
        para todo participante na listaDeParticipantes{
            se (inicio < fim e inicio >= dataInicial e fim <= dataFinal){
                indicaDisponibilidadeDe(participante,inicio,fim)
            }
        }
    }
    indicaDisponibilidadeDe(participante,inicio,fim){
        Disponibilidade disp = new Disponibilidade(participante,inicio,fim)
        disponibilidades.add(disp)
    }
    mostraSobreposicao(){
        /* De alguma forma vai comparar disponibilidades */
    }
}
class Pessoa {
    email
}
class Intervalo {
    inicio
    fim
}
class Disponibilidade{
    participante (string)
    Intervalo
}

1. Indica em qual período ele gostaria de marcar a reunião (por exemplo, entre10 e 20 de abril);
2. Ele determina também a lista de participantes identificados pelos seus endereços eletrônicos.
3. A seguir, cada um dos participantes indica os horários de disponibilidade dentro do período
determinado pelo organizador.
4. O organizador então visualiza a sobreposição dos horários de todos os participantes e
escolhe um horário para a reunião.

public void marcarReuniaoEntre(LocalDate dataInicial,LocalDate dataFinal,Collection<String> listaDeParticipantes)

public void indicaDisponibilidadeDe(String participante,LocalDateTime inicio,LocalDateTime fim)

public void mostraSobreposicao()